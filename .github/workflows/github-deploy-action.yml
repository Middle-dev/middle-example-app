name: GitHub Actions Demo
run-name: ${{ github.actor }} deployed! ðŸš€
on: 
  push:
    tags:
      - v*  # Push events matching v*, e.g. v1.0, v20.15.10
jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Install rust nightly # annoyingly, needed to use #![feature(vec_into_raw_parts)]
        run: rustup install nightly

      - name: Switch to nightly as default
        run: rustup default nightly

      - name: Install wasm32
        run: |
          rustup target add wasm32-unknown-unknown

      - name: Build
        # run: cargo build --target wasm32-unknown-unknown --release  # optionally, can make the wasm binary smaller, but we lose out on valuable debug data
        run: cargo build --target wasm32-unknown-unknown
      
      - name: Compress the build
        # We don't know the name and gzip requires it, so grab the name and pipe it in
        run: gzip target/wasm32-unknown-unknown/debug/$(ls target/wasm32-unknown-unknown/debug/ | grep -e ".*\.wasm$"))

      - name: Grab compiled wasm name
        shell: bash
        run: |
            WASM_ARTIFACT=`ls target/wasm32-unknown-unknown/debug/ | grep -e ".*\.wasm\.gz$"`
            echo "WasmArtifact=$WASM_ARTIFACT" >> $GITHUB_ENV
        
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          name: my_build.wasm
          path: target/wasm32-unknown-unknown/debug/${{ env.WasmArtifact }}
          retention-days: 1

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload release asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: target/wasm32-unknown-unknown/debug/${{ env.WasmArtifact }}
          asset_name: output.wasm.gz  # Rename to output.wasm.gz
          asset_content_type: middle/wasm
